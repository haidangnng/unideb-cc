@page "/courses/{Id}/test/create"

@inject IMaterialService MaterialService
@inject ISnackbar Snackbar

<PageTitle>Create Test</PageTitle>

<MudText Typo="Typo.h4">Create Test</MudText>

<MudPaper Style="margin: auto; height: 100%" Class="my-4">
    <MudStepper Linear="true" @bind-ActiveStep="_activeStep">

        <MudStep Title="Test Details">
            @* <TestStepDetails Model="_testModel" OnNext="NextStep" /> *@
        </MudStep>

        <MudStep Title="Settings">
            @* <TestStepSettings Model="_testModel" OnNext="NextStep" /> *@
        </MudStep>

        <MudStep Title="Add Questions">
            @* <TestStepQuestions Model="_testModel" OnNext="NextStep" /> *@
        </MudStep>

        <MudStep Title="Review">
            @* <TestStepReview Model="_testModel" OnPublish="SubmitTest" /> *@
        </MudStep>

    </MudStepper>
</MudPaper>


@code {
    [Parameter] public string Id { get; set; } = String.Empty;
    public List<Material> Materials { get; set; }
    private int _activeStep = 0;

    private async Task NextStep()
    {
        _activeStep++;
    }


    private async Task GetMaterials()
    {
        try
        {
            Materials = await MaterialService.GetMaterialsByCourseId(Int32.Parse(Id));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Failed to load courses: {ex.Message}", Severity.Error);
            Materials = new List<Material>();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetMaterials();
    }
}