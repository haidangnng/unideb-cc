@using System.Text.Json;

<Block Title="Tests" IsEmpty="!(Tests != null && Tests.Any())" EmptyDesc="No tests available">
    <ActionButton>
        <MudButton StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Variant="Variant.Outlined"
            Href=@($"/courses/{Id}/test/create")>Create Test</MudButton>
    </ActionButton>

    <ChildContent>
        <MudGrid>
            @foreach (var item in Tests)
            {
                <MudItem xs="12" md="6" lg="4">
                    <MudLink Href="@($"/test/{item.Id}")">
                        <MudCard Class="mud-width-full">
                            <MudCardContent>
                                <MudText Typo="Typo.h6">@item.Title</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudLink>
                </MudItem>
            }
        </MudGrid>
    </ChildContent>
</Block>

@code {
    [Parameter] public string Id { get; set; } = String.Empty;
    [Parameter] public List<TestDetailDTO> Tests { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(JsonSerializer.Serialize(Tests, new JsonSerializerOptions { WriteIndented = true }));
    }
}