@inherits LayoutComponentBase
@layout ThemeLayout
@attribute [Authorize]

@inject ThemeContextService ThemeContext
@inject IAuthService Auth
@inject NavigationManager Navigation
@inject UserContextService UserContext

<MudAppBar Elevation="1">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
        OnClick="@((e) => DrawerToggle())" />
    <MudText Typo="Typo.h6" Class="px-4">Aelora</MudText>
    <MudSpacer />
    <MudIconButton OnClick="Logout" Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" />

    <MudCheckBox @bind-Value="ThemeContext.IsDarkMode" CheckedIcon="@Icons.Material.Filled.DarkMode"
        UncheckedIcon="@Icons.Material.Filled.LightMode" Color="Color.Primary"></MudCheckBox>

</MudAppBar>

<MudDrawer @bind-Open="_drawerOpen" Elevation="2">
    <Menu />
</MudDrawer>

<MudMainContent>
    <div class="pa-4">
        @Body
    </div>
</MudMainContent>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _isDarkMode = false;
    bool _drawerOpen = true;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await Auth.LogoutAsync();
        Navigation.NavigateTo("/login");
        UserContext.Clear();
    }
    protected override async Task OnInitializedAsync()
    {
        await UserContext.InitializeAsync();
    }
}